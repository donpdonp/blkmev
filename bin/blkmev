#!/usr/bin/env perl6

use v6;
use lib './lib';
use BlkMeV;
use BlkMeV::Net;
use BlkMeV::Chain;

sub MAIN ( Str $chain_name =  "bitcoin", Str $ahost = "" ) {

  my $chain = BlkMeV::Chain::Chain.new(name => $chain_name);
  my $supplier = Supplier.new;
  my $supply = $supplier.Supply;
  my $payload_tube = Channel.new;
  my $socket;
  my $master_switch = Channel.new;

  my $host = $ahost.chars > 0 ?? $ahost !! $chain.host;
  say "connecting {$host}:{$chain.port}";

  CATCH { default { say .^name, ': ', .Str } };

  IO::Socket::Async.connect($host, $chain.port).then( -> $promise {
    $socket = $promise.result;
    say "connected to {$socket.peer-host}:{$socket.peer-port}";
    $payload_tube.send("");
    $supplier.emit('connect');
    BlkMeV::Net::read_loop($socket, $supplier, $payload_tube, $master_switch);
  });

  $supply.tap( -> $inmsg {
    BlkMeV::Net::dispatch($inmsg, $chain, $socket, $payload_tube)
  });

  $master_switch.receive; # wait forever
}

=begin pod
=head1 USAGE
$ blkmev
=end pod

